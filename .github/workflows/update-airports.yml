name: Update Airport Data

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:      # Allow manual trigger
  push:
    paths:
      - 'src/**'         # Run on changes to source code
      - '.github/workflows/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # Fetch all history for proper change detection

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'     # Cache pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyarrow  # Required for future pandas versions

    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true

    - name: Update airport data
      run: |
        python src/update_data.py

    - name: Check for changes
      id: check
      run: |
        if [[ -n "$(git status --porcelain data/)" ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push if changed
      if: steps.check.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data/
        git commit -m "Update airport data [automated]"
        git push

    # Deploy to GitHub Pages
    - name: Setup Pages
      if: success()
      uses: actions/configure-pages@v4

    - name: Upload artifact
      if: success()
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

    - name: Deploy to GitHub Pages
      if: success()
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # Notify on failure
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const run_id = context.runId;
          const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          const date = new Date().toISOString();
          
          await github.rest.issues.create({
            owner,
            repo,
            title: `‚ùå Data update workflow failed - ${date.split('T')[0]}`,
            body: `## Workflow Failure Report
            
            The airport data update workflow has failed.
            
            ### Details
            - **Time**: ${date}
            - **Workflow**: Update Airport Data
            - **Run ID**: ${run_id}
            - **Trigger**: ${context.eventName}
            
            ### Actions
            1. Please check the [detailed logs](${run_url})
            2. Review recent changes that might have caused this failure
            3. Verify data source availability
            
            ### Quick Links
            - [Workflow File](https://github.com/${owner}/${repo}/blob/main/.github/workflows/update-airports.yml)
            - [Recent Commits](https://github.com/${owner}/${repo}/commits/main)
            - [Repository Settings](https://github.com/${owner}/${repo}/settings)
            
            @${owner} Please investigate this failure.`
          });

    # Cleanup
    - name: Clean up workspace
      if: always()
      run: |
        rm -rf coverage.xml
        rm -rf .coverage
        rm -rf .pytest_cache